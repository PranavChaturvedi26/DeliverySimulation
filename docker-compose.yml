version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:7.0
    container_name: greencart-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: greencart
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/data:/docker-entrypoint-initdb.d
    networks:
      - greencart-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service for Caching
  redis:
    image: redis:7-alpine
    container_name: greencart-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - greencart-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: greencart-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGO_URI: mongodb://admin:admin123@mongodb:27017/greencart?authSource=admin
      JWT_SECRET: your_jwt_secret_key_change_in_production
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_TTL: 300
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - greencart-network
    command: npm run dev

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: greencart-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:5000
    ports:
      - "3000:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - greencart-network
    command: npm run dev

  # MongoDB Express (Optional - Web-based MongoDB admin interface)
  mongo-express:
    image: mongo-express:latest
    container_name: greencart-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - greencart-network

  # Redis Commander (Optional - Web-based Redis admin interface)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: greencart-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - greencart-network

networks:
  greencart-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local